{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","addCredits","Debits","debits","debit","addDebits","App","logInInfo","newUser","currentUser","event","console","log","Date","toISOString","newEntry","creditList","length","newBalance","Number","newCredits","push","toFixed","debitList","newDebits","a","axios","get","creditTotal","debitTotal","i","data","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a316f46d.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nconst Credits = (props) => {\n   \n  let creditsView = () =>{\n\n    const {credits} = props;\n    return credits.map((credit) => {\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}> {credit.amount} {credit.description} {date}</li>\n    })\n  }\n  \n  \n  return (\n    <div>\n      <h1>Credits</h1>\n      \n      {creditsView()}\n\n      <form onSubmit={props.addCredits}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    }) \n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebits}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nimport axios from \"axios\"\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 12345,\n      debitList: [],\n      creditList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    }\n  }\n\n  async componentDidMount(){\n    let credits = await axios.get(\"https://moj-api.herokuapp.com/credits\");\n    let debits = await axios.get(\"https://moj-api.herokuapp.com/debits\");\n\n    let creditTotal = 0;\n    let debitTotal = 0;\n\n    for(let i = 0; i < credits.data.length; ++i){\n      console.log(credits.data[i].amount)\n      creditTotal += credits.data[i].amount;\n    }\n\n    for(let i = 0; i < debits.data.length; ++i){\n      console.log(debits.data[i].amount)\n      debitTotal += debits.data[i].amount;\n    }\n\n    this.setState({\n      creditList : credits.data,\n      debitList : debits.data,\n      accountBalance : Number(debitTotal - creditTotal).toFixed(2)\n    })\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  addCredits = (event) =>{\n    console.log(\"hello\");\n\n    event.preventDefault();\n\n    let date = new Date().toISOString();\n    let description = event.target.description.value;\n    let amount = event.target.amount.value;\n    let id = this.state.creditList.length\n\n    let newEntry = {\n      'id' : id,\n      'amount' : amount,\n      'description' : description,\n      'date' : date\n    }\n\n    let newBalance = Number(this.state.accountBalance) - Number(amount);\n    let newCredits = this.state.creditList;\n    newCredits.push(newEntry);\n    this.setState({\n      accountBalance : newBalance.toFixed(2),\n      creditList : newCredits\n    });\n  }\n\n  addDebits = (event) =>{\n    console.log(\"hello\");\n\n    event.preventDefault();\n\n    let date = new Date().toISOString();\n    let description = event.target.description.value;\n    let amount = event.target.amount.value;\n    let id = this.state.debitList.length\n\n    let newEntry = {\n      'id' : id,\n      'amount' : amount.toFixed(2),\n      'description' : description,\n      'date' : date\n    }\n\n    let newBalance = Number(this.state.accountBalance) + Number(amount);\n    let newDebits = this.state.debitList;\n    newDebits.push(newEntry);\n    this.setState({\n      accountBalance : newBalance.toFixed(2),\n      debitList : newDebits\n    });\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebits={this.addDebits} accountBalance={this.state.accountBalance}/>) \n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredits={this.addCredits} accountBalance={this.state.accountBalance}/>) \n\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-example-code-gh-pages\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}